<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bf.web.customer.mapper.CustomerMapper">

	<select id="selectNoticeList" resultType="com.bf.web.customer.vo.NoticeVO">
		SELECT
		       @notice_num := @notice_num + 1 AS rowNbr
		     , bbs_idx bbsIdx
		     , classification
		     , subject
		     , writer
		     , DATE_FORMAT(reg_date, '%Y-%m-%d') AS regDate
		     , hit
		FROM   bbs_normal
		     , (select @notice_num:=0) TMP
		WHERE  1 = 1
		AND    bbs_code = 1
		AND    notice = 1
		AND    bbs_idx NOT IN ('10270','10194','9933','9668')
		AND    subject NOT LIKE '%[언론보도]%'
		ORDER
		BY     bbs_idx desc
		LIMIT  10
	</select>

	<select id="selectNoticeNormalList" resultType="com.bf.web.customer.vo.NoticeVO" parameterType="com.bf.web.customer.vo.NoticeVO">
		<include refid="common_mapper.pagePrefix" />
		select
				A.bbsCode
				, A.bbsIdx
				, A.classification
				, A.subject
				, A.writer
				, A.regDate
				, A.hit
				, (select count(*) from bbs_normal where bbs_code = 1 and site_type = 'B' and subject not like '%[언론보도]%') AS totalCnt
		from (
			select
				bbs_code bbsCode
				, bbs_idx bbsIdx
				, classification
				, subject
				, writer
				, DATE_FORMAT(reg_date, '%Y-%m-%d') regDate
				, hit
			from bbs_normal
				where bbs_code = 1
				<if test="searchStr!=null and searchStr!=''">
					and (subject like CONCAT('%',#{searchStr},'%') or contents like CONCAT('%',#{searchStr},'%'))
				</if>
				order by bbs_idx desc
		) A
		where A.bbsCode = 1
			and A.bbsIdx not in ('10270','10194','9933','9668')
			and subject not like '%[언론보도]%'
		order by A.regDate desc
		<include refid="common_mapper.pageSuffix" />
	</select>

	<select id="selectNoticeDetail" resultType="com.bf.web.customer.vo.NoticeVO" parameterType="String">
		select
			  A.classification
			, A.subject
			, A.writer
			, A.hit
			, F.up_file_name as upFileName
			, F.ori_file_name as oriFileName
			, F.file_size as fileSize
			, F.file_type as fileType
			, A.contents
			, DATE_FORMAT(A.reg_date, '%Y-%m-%d') regDate
		from bbs_normal A
		LEFT JOIN BBS_NORMAL_UPFILE F on A.bbs_idx = F.bbs_idx AND A.bbs_code = F.bbs_code
		where A.bbs_code = 1 and A.bbs_idx = #{idx}
	</select>

	<update id="updateHitCountForNotice" parameterType="String">
		update
			bbs_normal
		set hit = hit + 1
		where bbs_idx = #{idx}
	</update>
<!--

	&lt;!&ndash; 자료실 리스트 &ndash;&gt;
	<select id="selectReferenceList" parameterType="HashMap" resultType="com.bf.web.event.BbsGalleryVO">
		<include refid="common_mapper.pagePrefix" />
		SELECT
			BBS_IDX AS bbsIdx
			, CLASSIFICATION AS classification
			, SUBJECT AS subject
			&lt;!&ndash; , CONTENTS AS contents &ndash;&gt;
			, WRITER AS writer
			, REG_DATE AS regDate
			, GROUPS AS groups
			, REF AS ref
			, HIT AS hit
			, DEPTH AS depth
			, USER_IDX AS userIdx
			, ORIGIN_USER_IDX AS originUserIdx
			, SECRET AS secret
			, UPFILE_CNT AS upfileCnt
			, COMMENT_CNT AS commentCnt
			, UP_FILE_NAME AS upFileName
			, STEP_2 AS step2
			, LINK AS link
			, totalCnt
			, thumbnail
		FROM
		(
			SELECT
				A.BBS_IDX
				, A.CLASSIFICATION
				, A.SUBJECT
				&lt;!&ndash; , A.CONTENTS &ndash;&gt;
				, A.WRITER
				, DATE_FORMAT(A.REG_DATE, '%Y-%m-%d') as REG_DATE
				, A.GROUPS
				, A.REF
				, A.HIT
				, A.DEPTH
				, A.USER_IDX
				, A.ORIGIN_USER_IDX
				, A.SECRET
				, A.UPFILE_CNT
				, A.COMMENT_CNT
				, UP_FILE_NAME
				, A.STEP_2
				, A.LINK
				,
					 (
							SELECT
								COUNT(A.BBS_IDX)
							FROM BBS_NORMAL A LEFT JOIN (SELECT * FROM BBS_NORMAL_UPFILE WHERE BBS_CODE=9 AND FILE_TYPE = 2) B ON A.BBS_IDX = B.BBS_IDX
							<include refid="referenceListWhere"></include>
							&lt;!&ndash; AND A.site_type like '%B%' &ndash;&gt;
							ORDER BY A.GROUPS DESC, A.REF ASC
					) as totalCnt
				, A.thumbnail
			FROM BBS_NORMAL A LEFT JOIN (SELECT * FROM BBS_NORMAL_UPFILE WHERE BBS_CODE=9 AND FILE_TYPE = 2) B ON A.BBS_IDX = B.BBS_IDX
			<include refid="referenceListWhere"></include>
			&lt;!&ndash; ORDER BY A.GROUPS DESC, A.REF ASC &ndash;&gt;
			ORDER BY A.SITE_TYPE ASC, DATE_FORMAT(A.REG_DATE, '%Y-%m-%d') DESC, A.BBS_IDX DESC
		) C
		&lt;!&ndash; LIMIT  0, #{selectCnt} &ndash;&gt;
		<include refid="common_mapper.pageSuffix" />
	</select>

	&lt;!&ndash; 자료실 조건 쿼리 &ndash;&gt;
	<sql id="referenceListWhere">
		WHERE A.BBS_CODE = 9
			AND A.del_state != 1		&lt;!&ndash; 노출 여부 (1:비노출 0:노출) &ndash;&gt;
		<if test="searchStr!=null and searchStr!=''">
			AND REPLACE(A.SUBJECT, ' ', '') LIKE CONCAT('%',REPLACE(#{searchStr}, ' ',''),'%')
			&lt;!&ndash; AND A.SUBJECT LIKE CONCAT('%',#{searchStr},'%') &ndash;&gt;
		</if>
		<if test="classification!=null and classification!=''">
			AND A.CLASSIFICATION IN (${classification})
		</if>
		<if test="step2!=null and step2!=''">
			AND A.step_2 = #{step2}
		</if>
			AND A.site_type like '%B%'
	</sql>

	&lt;!&ndash; 자료실 카테고리 조회 &ndash;&gt;
	<select id="selectReferenceStep2List" parameterType="string" resultType="HashMap">
		SELECT DISTINCT A.step_2 AS step2
		FROM BBS_NORMAL A LEFT JOIN (SELECT * FROM BBS_NORMAL_UPFILE WHERE FILE_TYPE = 2) B ON A.BBS_IDX = B.BBS_IDX
		WHERE A.BBS_CODE = 9
			AND A.del_state != 1		&lt;!&ndash; 노출 여부 (1:비노출 0:노출) &ndash;&gt;
		<if test="value!=null and value!=''">
			AND A.CLASSIFICATION IN (${value})
		</if>
			AND A.STEP_2 IS NOT NULL
		ORDER BY IF (step_2='M', 0, IF (step_2='D', 0.1, IF (step_2='MD', 1, IF (step_2='L', 2, IF (step_2='W', 3, IF (step_2='MS', 5, 4))))))
		&lt;!&ndash; M안마의자, MD마사지베드, D의료기기, W정수기, L라클라우드, MS소형안마기 &ndash;&gt;
	</select>

	&lt;!&ndash; 자료실 건수 조회 &ndash;&gt;
	&lt;!&ndash; <select id="selectReferenceListTotalCount" resultType="Integer" parameterType="hashmap">
		SELECT
			count(BBS_IDX) totalCount
		FROM
		(
			SELECT
				A.BBS_IDX

			FROM BBS_NORMAL A LEFT JOIN (SELECT * FROM BBS_NORMAL_UPFILE WHERE FILE_TYPE = 2) B ON A.BBS_IDX = B.BBS_IDX
			WHERE A.BBS_CODE = 9
			<if test="tab.equals('guide')">
				AND A.SUBJECT LIKE '%설명서%'
			</if>
			<if test="tab.equals('emi')">
				AND A.SUBJECT LIKE '%인증서%'
			</if>
			<if test="tab.equals('video')">
				AND A.SUBJECT LIKE '%영상%'
			</if>
			<if test="tab.equals('etc')">
				AND (A.SUBJECT not like '%영상%' and A.SUBJECT not like '%설명서%' and A.SUBJECT not like '%퀵 가이드%')
			</if>
			<if test="tab.equals('app')">
				AND A.SUBJECT LIKE '%앱%'
			</if>
			<if test="tab.equals('quickGuide')">
				AND A.SUBJECT LIKE '%퀵 가이드%'
			</if>
			<if test="searchStr!=null and searchStr!=''">
				AND A.SUBJECT LIKE CONCAT('%',#{searchStr},'%')
			</if>
			ORDER BY A.GROUPS DESC, A.REF ASC
		) C
	</select> &ndash;&gt;

	&lt;!&ndash; 자료실 내용 조회 &ndash;&gt;
	<select id="selectReferenceDetail" parameterType="com.bf.web.customer.vo.NoticeVO" resultType="com.bf.web.customer.vo.NoticeVO">
			SELECT
				A.BBS_IDX as bbsIdx
				, A.SUBJECT as subject
				, A.HIT as hit
				, A.WRITER as writer
				, A.CONTENTS as contents
				, DATE_FORMAT(A.reg_date, '%Y-%m-%d') as regDate
				, B.UP_FILE_NAME as upFileName
				, B.ORI_FILE_NAME as oriFileName
			FROM BBS_NORMAL A LEFT JOIN (SELECT * FROM BBS_NORMAL_UPFILE WHERE FILE_TYPE = 2 AND bbs_code = 9) B ON A.BBS_IDX = B.BBS_IDX
			WHERE A.BBS_CODE = 9
			  AND A.BBS_IDX = #{bbsIdx}
	</select>

	&lt;!&ndash; 홈쇼핑 방송일정 &ndash;&gt;
	<select id="listHomeshopping" parameterType="com.bf.web.customer.vo.HomeshoppingVO" resultType="com.bf.web.customer.vo.HomeshoppingVO">
		SELECT
			BBS_CODE as bbsCode
			, SUBJECT as subject
			, YEAR as year
			, MONTH as month
			, DATE as date
		FROM
			bbs_normal
		WHERE
			BBS_CODE = 13 AND YEAR = #{year} AND MONTH = #{month}
		ORDER BY REG_DATE DESC
	</select>

	<select id="get" parameterType="com.bf.web.customer.vo.HomeshoppingVO" resultType="com.bf.web.customer.vo.HomeshoppingVO">
		SELECT
			BBS_CODE as bbsCode
			, CONTENTS as contents
			, YEAR as year
			, MONTH as month
			, DATE as date
		FROM
			bbs_normal
		WHERE
			BBS_CODE = 13
			<if test="year!=0 and month!=0 and date!=0">
				AND YEAR = #{year} AND MONTH = #{month} AND DATE=#{date}
			</if>
		ORDER BY REG_DATE DESC
		<if test="top!=0">
			limit ${top}
		</if>
	</select>
-->

	<select id="selectFaqList" resultType="com.bf.web.customer.vo.FaqVO" parameterType="com.bf.web.customer.vo.FaqVO">
		select
			bbs_code bbsCode
			, bbs_idx bbsIdx
			, classification
			, classification_sub
			, IFNULL(site_type, '') as siteType
			, subject
			, contents
			, IFNULL(best, 0) as best
			from bbs_faq
			where bbs_code = 2 and (SITE_TYPE LIKE '%B%' AND site_type != 'B2B')
			<if test="classification != null and classification != '' ">
				and classification LIKE CONCAT('%', #{classification}, '%')
			</if>
			<if test="contents != null and contents != '' ">
				and (contents LIKE CONCAT('%', #{contents}, '%') or subject LIKE CONCAT('%', #{contents}, '%'))
			</if>
		order by IFNULL(best, 0) DESC, classification_sub, reg_date desc
	</select>

	<!-- FAQ List 안마의자 전용 API용 -->
	<select id="selectChairFaqListApi" resultType="HashMap" parameterType="HashMap">
		/****************[customer.selectChairFaqListApi]****************/
		select
			  bbs_idx bbsIdx
			, IFNULL(site_type, '') as siteType
			, subject
		 from bbs_faq
		where bbs_code = 2
		  and site_type REGEXP ('안마의자|공통')
		order by classification_sub, reg_date desc
	</select>

	<!-- FAQ Detail 안마의자 전용 API용 -->
	<select id="selectChairFaqDetailApi" resultType="com.bf.web.customer.vo.NoticeVO" parameterType="com.bf.web.customer.vo.NoticeVO">
		/****************[customer.selectChairFaqDetailApi]****************/
		select
			  bbs_idx bbsIdx
			, IFNULL(site_type, '') as siteType
			, subject
			, contents
		 from bbs_faq
		where bbs_code = 2
		  and site_type REGEXP ('안마의자|공통')
		  and bbs_idx = ${bbsIdx}
	</select>

	<!-- groups 채번 -->
	<select id="getQnaGroups" resultType="int">
		select ifnull(max(groups), 0) + 1 as groups from bbs_one_to_one;
	</select>

	<!-- 1:1문의(Q&A) 등록 -->
	<insert id="insertQna" parameterType="com.bf.web.myinfo.vo.Myinfo">
		/********************* customer.insertQna *********************/
		insert into bbs_one_to_one (
			origin_user_idx, user_idx, ord_nbr, product_type, product_name, groups, depth, ref
			, subject, classification, writer, email, email_request
			, contents, ip, reply_complete, site_type, cell_1, cell_2, cell_3, sms_request
			<if test="imgFile!=null and imgFile!=''">, img_file</if>
			<if test="qnaPwd!=null and qnaPwd!=''">, qna_pwd</if>
		)values(
			#{userIdx}, #{userIdx}, NULL, #{productType}, #{productName}, #{groups}, 1, 1
			, #{subject}, #{classification}, #{writer}, #{email}, #{emailRequest}
			, #{contents}, #{ip}, 0, 'BM' , #{cell1}, #{cell2}, #{cell3}, 0
			<if test="imgFile!=null and imgFile!=''">, #{imgFile}</if>
			<if test="qnaPwd!=null and qnaPwd!=''">, #{qnaPwd}</if>
		)
	</insert>

	<!-- 1:1문의(Q&A) 게시글 수정 -->
	<update id="updateQna" parameterType="com.bf.web.myinfo.vo.Myinfo">
		UPDATE BBS_ONE_TO_ONE SET
			classification = #{classification}
			, subject = #{subject}
			, contents = #{contents}
			, publish_status = #{publishStatus}
			<if test="imgFile!=null and imgFile!=''">, img_file = #{imgFile}</if>
			, qna_pwd = #{qnaPwd}
			, reg_date = now()
		WHERE bbs_idx = #{bbsIdx} and depth = 1 and site_type = 'B' and ref = 1

	</update>

	<!-- 1:1문의(Q&A) 비밀번호 체크 -->
	<select id="qnaPwdCheck" parameterType="com.bf.web.myinfo.vo.Myinfo" resultType="HashMap">
		select
			bbs_idx as bbsIdx
			, groups
			, user_idx as userIdx
			, qna_pwd as qnaPwd
		 from bbs_one_to_one
		 where depth = 1 and site_type = 'B' and bbs_idx = #{bbsIdx} and qna_pwd = #{qnaPwd}
	</select>

	<!-- 1:1문의(Q&A) 리스트 데이터 조회 -->
	<select id="selectQnaList" resultType="com.bf.web.customer.vo.NoticeVO" parameterType="com.bf.web.customer.vo.NoticeVO">
		<include refid="common_mapper.pagePrefix" />
		select userIdx, bbsIdx, groups, depth, ref, subject, classification, writer
			, DATE_FORMAT(regDate, '%Y-%m-%d') regDate, contents, publishStatus, qnaPwd
			, (case classification
				when 1 then '상품 문의'
				when 2 then '배송 문의'
				when 3 then '교환/반품 문의'
				when 4 then '교환/반품 문의'
				when 5 then '환불/취소 문의'
				when 6 then '환불/취소 문의'
				<!-- when 7 then 'A/S 문의' -->
				when 8 then '회원정보 문의'
				when 9 then '기타 문의'
				when 10 then '입금/결제 문의'
				else '' end) classificationName, replyComplete
			, (case replyComplete
				when 0 then '대기'
				when 1 then '완료'
				else '' end) replyCompleteName
			, (select count(*)
				from bbs_one_to_one
				where depth = 1
					and site_type = 'B'
					<if test="tab.equals('product')">and classification = '1'</if>
					<if test="tab.equals('delivery')">and classification = '2'</if>
					<if test="tab.equals('exchange')">and classification in ('3', '4')</if>
					<if test="tab.equals('cancel')">and classification in ('5', '6')</if>
					<if test="tab.equals('payment')">and classification = '10'</if>
					<if test="tab.equals('etc')">and classification = '9'</if>
					<if test="searchTxtType!=null and searchTxtType!=''">
						<if test="searchTxtType==1 and searchStr!=null and searchStr!=''">
							and writer like CONCAT('%',#{searchStr},'%')
						</if>
						<if test="searchTxtType==2 and searchStr!=null and searchStr!=''">
							and subject like CONCAT('%',#{searchStr},'%')
						</if>
						<if test="searchTxtType==3 and searchStr!=null and searchStr!=''">
							and reg_date like CONCAT('%',#{searchStr},'%')
						</if>
					</if>
			) AS totalCnt

		from
		(
			select bbs_idx as bbsIdx, groups, depth, ref, subject, classification, writer
			, reg_date as regDate, contents, publish_status as publishStatus
			, qna_pwd as qnaPwd, user_idx as userIdx, reply_complete as replyComplete
			from bbs_one_to_one
			<!-- where origin_user_idx = #{userIdx} -->
			where depth = 1
				and site_type = 'B'
				<if test="tab.equals('product')">
					and classification = '1'
				</if>
				<if test="tab.equals('delivery')">
					and classification = '2'
				</if>
				<if test="tab.equals('exchange')">
					and classification in ('3', '4')
				</if>
				<if test="tab.equals('cancel')">
					and classification in ('5', '6')
				</if>
				<if test="tab.equals('payment')">
					and classification = '10'
				</if>
				<if test="tab.equals('etc')">
					and classification = '9'
				</if>

				<if test="searchTxtType!=null and searchTxtType!=''">
					<if test="searchTxtType==1 and searchStr!=null and searchStr!=''">
						and writer like CONCAT('%',#{searchStr},'%')
					</if>
					<if test="searchTxtType==2 and searchStr!=null and searchStr!=''">
						and subject like CONCAT('%',#{searchStr},'%')
					</if>
					<if test="searchTxtType==3 and searchStr!=null and searchStr!=''">
						and reg_date like CONCAT('%',#{searchStr},'%')
					</if>
				</if>

			order by groups desc, ref asc, depth asc
		)  a
		where depth = 1

		<include refid="common_mapper.pageSuffix" />
	</select>

	<!-- 1:1문의(Q&A) 상세 데이터 조회 -->
	<select id="selectQnaDetail" parameterType="HashMap" resultType="HashMap">
		SELECT NAV.*
      	FROM ( SELECT @rownum:=@rownum+1 AS rowNbr, TM.*
                 FROM (
					select bbs_idx, groups, depth, ref, subject, classification, writer
						, DATE_FORMAT(reg_date, '%Y-%m-%d') reg_date, contents, user_idx
						, (case classification
							when 1 then '상품 문의'
							when 2 then '배송 문의'
							when 3 then '교환/반품 문의'
							when 4 then '교환/반품 문의'
							when 5 then '환불/취소 문의'
							when 6 then '환불/취소 문의'
							when 7 then 'A/S 문의'
							when 8 then '회원정보 문의'
							when 10 then '입금/결제 문의'
							when 9 then '기타 문의'
							else '' end) classification_name, reply_complete
						, (case reply_complete
							when 0 then '대기'
							when 1 then '완료'
							else '' end) reply_complete_name
					from
					(
						select bbs_idx, groups, depth, ref, subject, classification, writer, reg_date, contents, user_idx
						, reply_complete
						from bbs_one_to_one
						where groups = #{groups}
						order by depth asc, ref asc
					)  a
			    				) TM,
					 (select @rownum:=0) TMP
		        	) NAV
	</select>

	<!-- 1:1문의(Q&A) 수정 - 상세 데이터 조회 -->
	<select id="serviceQnaWriteData" parameterType="HashMap" resultType="HashMap">
		SELECT NAV.*
      	FROM ( SELECT @rownum:=@rownum+1 AS rowNbr, TM.*
                 FROM (
					select bbsIdx, groups, depth, ref, subject, classification, writer
						, DATE_FORMAT(reg_date, '%Y-%m-%d') reg_date, contents, user_idx, publishStatus, phoneNm
						, (case classification
							when 1 then '상품 문의'
							when 2 then '배송 문의'
							when 3 then '교환/반품 문의'
							when 4 then '교환/반품 문의'
							when 5 then '환불/취소 문의'
							when 6 then '환불/취소 문의'
							when 7 then 'A/S 문의'
							when 8 then '회원정보 문의'
							when 10 then '입금/결제 문의'
							when 9 then '기타 문의'
							else '' end) classification_name, reply_complete
						, (case reply_complete
							when 0 then '대기'
							when 1 then '완료'
							else '' end) reply_complete_name
					from
					(
						select bbs_idx as bbsIdx, groups, depth, ref, subject, classification, writer, reg_date, contents, user_idx
						, reply_complete, publish_status as publishStatus, concat(cell_1,'-',cell_2,'-',cell_3) as phoneNm
						from bbs_one_to_one
						where  (site_type = 'B' or site_type = 'BM') and bbs_idx = #{bbsIdx}
						order by depth asc, ref asc
					)  a
			    				) TM,
					 (select @rownum:=0) TMP
		        	) NAV
	</select>

	<!-- 1:1문의(Q&A) 게시글 작성자 IDX Check -->
	<select id="selectUserIdx" parameterType="String" resultType="String">
		select
			user_idx as userIdx
		 from bbs_one_to_one
		 where depth = 1 and site_type = 'B' and bbs_idx = #{bbsIdx}
	</select>

	<!-- 1:1문의(Q&A) 게시글 삭제 -->
	<delete id="qnaDelete" parameterType="HashMap">
		DELETE FROM bbs_one_to_one
		WHERE groups = #{groups}
		and site_type = 'B'
	</delete>

	<!-- 서비스 접수 홈페이지 DB 등록 -->
	<insert id="insertOnlineService" parameterType="com.bf.web.customer.vo.OnlineVO" useGeneratedKeys="true" keyProperty="serviceIdx">
		insert into
		    online_service (
		        user_idx,
		        name,
		        contant,
		        zip,
		        addr_1,
		        addr_2,
		        prdt_cate,
		        prdt_name,
		        service_group,
		        service_group_other,
		        prdt_shop,
		        prdt_shop_other,
		        content,
		        main_type,
		        erp_site_type,
		        cust_code,
		        reg_date,
		        cert_user_name,
		        cert_user_contact
		    )
		values
		    (
		    	#{userIdx}
		        ,#{name}
		        ,#{contant}
		        ,#{zip}
		        ,#{addr1}
		        ,#{addr2}
		        ,#{prdtCate}
		        ,#{prdtName}
		        ,#{serviceGroup}
		        ,#{serviceGroupOther}
		        ,#{prdtShop}
		        ,#{prdtShopOther}
		        ,#{content}
		        ,'BM'
		        ,'M'
		        ,#{custCode}
		        ,SYSDATE()
		        ,#{certUserName}
		        ,#{certUserContact}
		    );
	</insert>

	<!-- 에브리알 상담접수 (등록) -->
	<insert id="everyRConsultInsert" parameterType="HashMap">
		INSERT INTO CONSULT_INFO (
			  USER_IDX
			, SUBJECT
			, NAME
			, PHONE
			, EMAIL
			, COMPANY_NAME
			, CONSULT_TYPE
			, OPER_TYPE
			, CONTENTS
			, CONTENTS_2
			, CONTENTS_3
			, PRIVACY_AGREE
			, NOTICE_AGREE_1
			, NOTICE_AGREE_2
			, REG_SITE
		) VALUES (
			  #{userIdx}
			, #{subject}
			, #{name}
			, #{phone}
			, #{email}
			, #{companyName}
			, #{consultType}
			, #{operType}
			, #{contents}
			, #{contents2}
			, #{contents3}
			, #{privacyAgree}
			, #{noticeAgree1}
			, #{noticeAgree2}
			, 'BM'
		)
	</insert>

	<!-- 공용 안마의자 문의 상담접수 (등록) -->
	<insert id="shareConsultInsert" parameterType="HashMap">
		INSERT INTO CONSULT_INFO (
			  USER_IDX
			, NAME
			, PHONE
			, EMAIL
			, COMPANY_NAME
			, ZIP_CODE
			, COMPANY_ADDR
			, CONSULT_TYPE
			, CONTENTS
			, PRIVACY_AGREE
			, REG_SITE
		) VALUES (
			  #{userIdx}
			, #{name}
			, #{phone}
			, #{email}
			, #{companyName}
			, #{zipCode}
			, #{companyAddr}
			, #{consultType}
			, #{contents}
			, #{privacyAgree}
			, 'BM'
		)
	</insert>

	<!-- 상담접수 consultIdx 조회 -->
	<select id="selectConsultIdx" resultType="String">
		SELECT MAX(consult_idx) FROM CONSULT_INFO
	</select>

	<!-- 상담접수 (이미지 맵핑 데이터 등록) -->
	<insert id="consultMappingInsert" parameterType="HashMap">
		INSERT INTO CONSULT_INFO_MAPPING (
			  CONSULT_IDX
			<if test="upFileName!=null and upFileName!=''">
			, IMG_DIV
			, UP_FILE_NAME
			, ORI_FILE_NAME
			, FILE_SIZE
			</if>
		) VALUES (
			  #{consultIdx}
			<if test="upFileName!=null and upFileName!=''">
			, #{imgDiv}
			, #{upFileName}
			, #{oriFileName}
			, #{fileSize}
			</if>
		)
	</insert>

	<!-- 간편 서비스 인증 -->
	<select id="selectServiceAuthUNIERP" parameterType="hashmap" resultType="int">
		/****************[customer.selectServiceAuthUNIERP]****************/
		SELECT count(*)
		  FROM RENTAL.DBO.R_SERVICE_INFO WITH (NOLOCK)
		<where>
			<trim prefix="(" prefixOverrides="OR" suffix=")">
			   (AGREE_NM = #{custNumber} OR CUST_NM = #{custNumber})
			</trim>
			    AND
			<trim prefix="(" prefixOverrides="OR" suffix=")">
			    (HAND_TEL_NO = #{telNumber} OR TEL_NO = #{telNumber})
			</trim>
			    AND
		  	<trim prefix="(" prefixOverrides="OR" suffix=")">
			    SERVICE_NO =  #{receiveSeq}
		    </trim>
		</where>

	</select>

	<select id="getGoodsImgPath" resultType="String">
		SELECT
			img_path as imgPath
		  FROM img_mapping
		 WHERE model_code = #{modelCode}
	</select>

	<!-- 간편배송 인증 -->
	<select id="selectDeliveryAuth" parameterType="hashmap" resultType="int">
		SELECT
			   /****************[selectDeliveryAuth]****************/
			   COUNT(*)
		  FROM BFDELIV.DBO.TB_SHIPPING_INFO WITH (NOLOCK)
		  <where>
		  	<trim prefix="(" prefixOverrides="OR" suffix=")">
		  		(HPHONE_NO = #{telNumber} OR TEL_NO = #{telNumber})
		  	</trim>
		  		AND
		  	<trim prefix="(" prefixOverrides="OR" suffix=")">
		  	 	(BODY_NO = #{custNumber} OR CUST_NAME = #{custNumber})
		  	</trim>
		  </where>
	</select>

	<!-- 간편배송 상세 -->
	<select id="selectDeliveryInfo" parameterType="hashmap" resultType="hashmap">
		SELECT TOP 1
			   /****************[selectDeliveryInfo]****************/
			    A.SHIPPING_SEQ
			   ,A.BODY_NO
			   ,A.SHIPPING_TYPE
			   ,A.RECEIVE_DATE
			   ,A.CUST_NAME
			   ,A.INSADDR
			   ,A.TEL_NO
			   ,A.HPHONE_NO
			   ,A.PRODUCT_TYPE
			   ,A.PRODUCT_CODE
			   ,A.PRODUCT_NAME
			   ,A.COLORTYPE
			   ,A.QTY
			   ,A.PURCHASING_OFFICE
			   ,A.INS_COMPLETE
			   ,A.SERVICE_MONTH
			   ,A.DIV_STATUS
			   ,A.DELIVERYMAN1
			   ,A.DELIVERYMAN2
			   ,A.PROMISE
			   ,A.PROMISE_TIME
			   ,A.PRODUCT_TYPE
			   ,B.ADMIN_NM				AS GISA_NAME
			   ,B.TEL_NO				AS GISA_TELNO
			   ,CONVERT(VARCHAR(10), A.DUE_DATE, 120) AS DUE_DATE
			   ,CONVERT(VARCHAR(10), A.DIV_DATE, 120) AS DIV_DATE
		  FROM BFDELIV.DBO.TB_SHIPPING_INFO A WITH (NOLOCK)
		  LEFT JOIN BFDELIV.DBO.TB_ADMIN_INFO B ON A.DELIVERYMAN1 = B.ADMIN_ID
		  <where>
		  	<trim prefix="(" prefixOverrides="OR" suffix=")">
		  		(A.HPHONE_NO = #{telNum} OR A.TEL_NO = #{telNum})
		  	</trim>
		  		AND
		  	<trim prefix="(" prefixOverrides="OR" suffix=")">
		  		(A.BODY_NO = #{custNum} OR A.CUST_NAME = #{custNum})
		  	</trim>
	  			AND delyn = 'N'
		  </where>
		 <!-- ORDER BY SHIPPING_SEQ DESC -->
		 ORDER BY RECEIVE_DATE DESC, DUE_DATE DESC
	</select>

	<!-- 배송 주소 이력 INSERT -->
	<insert id="insertHistoryData" parameterType="hashmap">
		INSERT INTO TB_ADDRESS_HISTORY
		/****************[insertHistoryData]****************/
			(CUST_NUMBER
			 ,ADDRESS
			 ,SHIPPING_SEQ
			 ,GIFT_ADDR_CHANGED
			 ,REG_DATE
			)VALUES(
			 #{bodyNo}
			,#{instAddr}
			,#{shipSeq}
			,#{giftAddrChanged}
			,SYSDATE()
			)
	</insert>

	<!-- 지역 코드 조회 -->
	<select id="selectAreaCode" parameterType="hashmap" resultType="String">
		/****************[selectAreaCode]****************/
		SELECT
			   distinct area
		  FROM MANAGE_TEAM_AREA
		 WHERE area_name like CONCAT('%',#{addrName},'%')
	</select>

	<!-- 배송일 지정 및 주소변경 -->
	<update id="updateCustInfo" parameterType="hashmap">
		UPDATE BFDELIV.DBO.TB_SHIPPING_INFO
		/****************[updateCustInfo]****************/
		   SET
		   	   DUE_DATE         = #{expectDt}
		   	<if test="newAddr!=null and newAddr!=''">
		      ,INSADDR          = #{newAddr}
	      	</if>
		      ,UP_ACCESS_ID     = #{bodyNo}
		      ,UP_DATE          = GETDATE()
		      ,CUST_UPDATE      = 'AD'
		      ,COMPANY_CHECK	= concat((select COMPANY_CHECK from BFDELIV.DBO.TB_SHIPPING_INFO WITH (NOLOCK) where SHIPPING_SEQ = #{shipSeq}), '//' , #{companyCheck})		/* 이력에 추가 */
		      ,AREA				= #{area}				/* 지역 코드 가져오는 API있는지 확인 */
		 WHERE BODY_NO 	    	= #{bodyNo}
		   AND SHIPPING_SEQ 	= #{shipSeq}
	</update>

	<!-- 지역 코드 조회 UNIERP -->
	<select id="selectAreaCodeUNIERP" parameterType="hashmap" resultType="String">
		/****************[selectAreaCodeUNIERP]****************/
		SELECT
		 	   area
		  FROM MANAGE_TEAM_AREA
		 WHERE minor_nm = '${newAddr1}'
		 order by reg_dt desc
		 limit 1
	</select>

	<!-- 배송 제외일 조회 -->
	<select id="selectExceptDay" resultType="hashmap">
		SELECT DET_CD_NM
		 FROM BFDELIV.DBO.TB_CODE
		WHERE COMM_CD = '905'
		  AND GROUP_CD = 'SP'
		  AND COMM_CD != DET_CD
		  AND DET_CD_NM LIKE '%'+#{yearAndMonth}+'%'
	</select>

	<!-- 사은품 관련 정보 조회 -->
	<select id="selectGiftInfo" parameterType="hashmap" resultType="hashmap">
		SELECT TOP 1
	   		   A.CUSTCODE
	  	      ,B.ADDR1 GIFTADDR1
	  	      ,B.ADDR2 GIFTADDR2
          FROM BODYF.dbo.TBLCUSTMST A WITH (NOLOCK)
  	 	  LEFT JOIN BODYF.dbo.TBLPARCEL B WITH (NOLOCK) ON A.CUSTCODE = B.CUSTCODE
 	     WHERE A.CUSTNAME = #{custName}
   	       AND A.TEL = #{telNo} OR A.MOBILE = #{telNo}
   	     ORDER BY A.IN_DATE DESC
	</select>

	<!-- 사은품 주소 변경 -->
	<update id="updateGiftAddr" parameterType="hashmap">
		UPDATE BODYF.dbo.TBLPARCEL
		   SET POST  = #{postCode}
		      ,ADDR1 = #{giftAddr1}
		      ,ADDR2 = #{giftAddr2}
		 WHERE CUSTCODE = #{custCode}
	</update>

	<!-- 법인/관공서 구매 정보 등록 -->
	<insert id="insertBbsGalleryInfo" parameterType="HashMap" useGeneratedKeys="true" keyProperty="bbsIdx">
		insert into bbs_formmail
		(
			bbs_code
			, subject
			, writer
			, email
			<if test="tel != null and tel != '' ">
				, tel
			</if>
			, cell
			, reception_type
			, employee_name
			, employee_service_type
			, user_ip
			, contents
			, device
			, read_state
			, reg_date

		) values (
			#{bbsCode}
			, #{subject}
			, #{writer}
			, #{email}
			<if test="tel != null and tel != '' ">
				, #{tel}
			</if>
			, #{cell}
			, #{receptionType}
			, #{employeeName}
			, #{employeeServiceType}
			, #{userIp}
			, #{contents}
			, #{regSite}
			, 1
			, now()
		)
	</insert>

	<!-- B2B bbsIdx 조회 -->
	<select id="selectBbsIdx" resultType="String">
		SELECT MAX(bbs_idx) FROM BBS_FORMMAIL WHERE bbs_code = 43
	</select>

	<!-- 업로드 파일 정보 등록 -->
	<insert id="insertFormMailUpFile" parameterType="HashMap">
		insert into bbs_formmail_upfile
		(
			bbs_code
			, bbs_idx
			, up_file_name
			, ori_file_name
			, file_size
			, file_type
			, reg_date

		) values (
			#{bbsCode}
			, #{bbsIdx}
			, #{upFileName}
			, #{oriFileName}
			, #{fileSize}
			, #{fileType}
			, now()
		)
	</insert>

	<!-- B2B 이미지 업로드 리스트 조회 -->
	<select id="selectB2bFileList" parameterType="HashMap" resultType="HashMap">
		SELECT
			     BBS_IDX as bbsIdx
			   , UP_FILE_NAME as upFileName
			   , ORI_FILE_NAME as oriFileName
			   , FILE_SIZE as fileSize
		FROM  BBS_FORMMAIL_UPFILE
		WHERE BBS_IDX = #{bbsIdx}
		  AND BBS_CODE = #{bbsCode}
	</select>

	<!-- 이미지 등록 -->
	<insert id="insertUpfile" parameterType="HashMap" useGeneratedKeys="true" keyProperty="bbsIdx">
		INSERT INTO CONSULT_INFO_MAPPING (
			  CONSULT_IDX
			<if test="upFileName!=null and upFileName!=''">
			, IMG_DIV
			, UP_FILE_NAME
			, ORI_FILE_NAME
			, FILE_SIZE
			</if>
		) VALUES (
			  #{consultIdx}
			<if test="upFileName!=null and upFileName!=''">
			, #{imgDiv}
			, #{upFileName}
			, #{oriFileName}
			, #{fileSize}
			</if>
		)
	</insert>

	<!-- 이미지 업로드 리스트 조회 -->
	<select id="selectFileList" parameterType="HashMap" resultType="HashMap">
		SELECT
			     SEQ as seq
			   , CONSULT_IDX as consultIdx
			   , IMG_DIV as imgDiv
			   , UP_FILE_NAME as upFileName
			   , ORI_FILE_NAME as oriFileName
			   , FILE_SIZE as fileSize
		FROM CONSULT_INFO_MAPPING
		WHERE CONSULT_IDX = #{consultIdx}
	</select>

	<insert id="insertVisitPage" parameterType="hashMap">
		insert into
		    visit_page_info (
		        ip,
		        page,
		        site,
		        reg_date
		    )
		values
		    (
		    	#{ip}
		        ,#{page}
		        ,#{site}
		        ,SYSDATE()
		    );
	</insert>

	<select id="selectMyRentalListUNIERP_info_bak" parameterType="HashMap" resultType="Hashmap">
		SELECT
			/**************** [selectMyRentalListUNIERP_info] ****************/
			INFO.orderNo			AS orderNo
			, INFO.contNo			AS contNo
		    , INFO.custNo			AS custNo
		    , INFO.custName			AS custName
		    , INFO.custMobile		AS custMobile
		    , INFO.modelCode		AS modelCode
		    , INFO.erpModelName		AS erpModelName
		    , INFO.saleKind			AS saleKind
		    , INFO.saleKindName		AS saleKindName
		    , INFO.rentalTerm		AS rentalTerm
		    , INFO.rentalTerm		AS serviceMonth
		    , INFO.asMonth			AS asMonth
		    , INFO.usedTerm			AS usedTerm
		    , INFO.receipt			AS receipt
		    , INFO.monthlyPayDay	AS monthlyPayDay
		    , INFO.bankCd			AS bankCd
		    , INFO.acctNo			AS acctNo
		    , INFO.acctNo			AS bankNo
		    , INFO.bankNm			AS bankNm
		    , INFO.payMeth			AS payMeth
		    , INFO.panGubun			AS panGubun
		    , INFO.instPost			AS instPost
		    , INFO.instAddr1		AS instAddr1
            , INFO.instAddr2		AS instAddr2
            , INFO.instTel			AS instTel
            , INFO.instMobile		AS instMobile
            , INFO.instCustName		AS instCustName
		    , INFO.outcom			AS outcom
		    , INFO.instreserv		AS instreserv
            , INFO.custKind
            , INFO.custKind			AS grpCode
			, CONVERT(VARCHAR(10), INFO.installDate, 121) 		AS installDate
			, CONVERT(VARCHAR(10), INFO.freeAsStartDate, 121) 	AS freeAsStartDate
		    , CONVERT(VARCHAR(10), INFO.freeAsEndDate, 121)		AS freeAsEndDate
		    , CONVERT(VARCHAR(10), INFO.rentalStartDate, 121)	AS rentalStartDate
		    , CONVERT(VARCHAR(10), INFO.rentalEndDate, 121)		AS rentalEndDate
			, CONVERT(INT, INFO.rentalPrice1)					AS rentalPrice1
		    , CONVERT(INT, INFO.rentalPrice2)					AS rentalPrice2
		    , CONVERT(INT, INFO.totRentalPrice)					AS totRentalPrice
		    , CONVERT(INT, INFO.prepayments)					AS prepayments
	FROM   (
		SELECT
				DISTINCT OC.ORDER_NO	orderNo
				, OC.CONT_NO			contNo
				, OC.CUST_NO			custNo
				, CS.CUST_NM			custName
				, UNIERP5.dbo.FN_DECRYPT_AES256(CS.HAND_TEL_NO, 'bfservicekey!@12')		custMobile
				, OA.CONT_DT			installDate
				, OC.GOODS_CD			modelCode
				, OC.GOODS_NM			erpModelName
				, OC.SALES_KIND			saleKind
				, M1.MINOR_NM			saleKindName
				, OC.RND1_RENTAL_AMT	rentalPrice1
				, OC.RND2_RENTAL_AMT	rentalPrice2
				, OC.RND1_PAY_AMT		totRentalPrice
				, OC.PREPAY_AMT			prepayments
				, OP.PAY_METH			receipt
				, OP.MONTHLY_PAY_DAY	monthlyPayDay
				, OP.BANK_CD			bankCd
				, CASE WHEN OP.PAY_METH = '1' THEN CC.CARD_CO_NM
						   ELSE BK.BANK_NM
				  	  END AS bankNm
				, CASE WHEN OP.PAY_METH = '1' THEN '신용카드'
			  	  	       WHEN OP.PAY_METH = '2' THEN 'CMS'
			  	  	       WHEN OP.PAY_METH = '3' THEN '가상계좌'
			  	  	       WHEN OP.PAY_METH = '4' THEN '지로'
			  	  	       WHEN OP.PAY_METH = '5' THEN '가수금'
			  	  	       WHEN OP.PAY_METH = '6' THEN '법인계좌'
			  	  	       WHEN OP.PAY_METH = '7' THEN '선입금'
			  	  	       WHEN OP.PAY_METH = '8' THEN '연체입금'
			  	  	       WHEN OP.PAY_METH = '9' THEN '일반(현금)'
			  	  	       ELSE OP.PAY_METH
		  	  	       END AS payMeth
				, REPLICATE('*', LEN(RENTAL.dbo.FN_DECRYPT_AES256(OP.ACCT_NO, 'bfservicekey!@12'))-4) + RIGHT(RENTAL.dbo.FN_DECRYPT_AES256(OP.ACCT_NO, 'bfservicekey!@12'), 4) acctNo
				, M2.MINOR_NM			GIRONAME
				, OC.RENTAL_PERIOD		rentalTerm
				, OC.RENTAL_PERIOD		serviceMonth
				, OC.AS_PERIOD			asMonth
				, CASE WHEN (DATEDIFF(MM, OC.RENTAL_FR_DT, CONVERT(VARCHAR, GETDATE(), 121)) + 1) >= OC.RENTAL_PERIOD THEN OC.RENTAL_PERIOD ELSE (DATEDIFF(MM, OC.RENTAL_FR_DT, CONVERT(VARCHAR, GETDATE(), 121)) + 1) END usedTerm
				, OC.CONT_STS			panGubun
				, M3.MINOR_NM			PAN_GUBUN_NAME
				, OC.RENTAL_FR_DT		freeAsStartDate
				, CASE WHEN ISNUMERIC(OC.AS_PERIOD) = 1 THEN DATEADD(M, OC.AS_PERIOD, OA.CONT_DT - 1) ELSE OC.RENTAL_TO_DT END freeAsEndDate
				, OC.RENTAL_FR_DT		rentalStartDate
				, OC.RENTAL_TO_DT		rentalEndDate
				, CASE WHEN OC.ITEM_GROUP_BIG LIKE 'A%' THEN 'M'	-- chair
				       WHEN OC.ITEM_GROUP_BIG LIKE 'L%' THEN 'L'	-- lacloud
					   WHEN OC.ITEM_GROUP_BIG LIKE 'W%' THEN 'W'	-- Water
					   WHEN OC.ITEM_GROUP_BIG LIKE 'B%' THEN 'G'	-- BTN GLED
					   WHEN OC.ITEM_GROUP_BIG = 'U11000' THEN 'BB'	-- 생활가전 블롬베르크
					   ELSE OC.ITEM_GROUP_BIG
				  END custKind
				, OI.INSTL_ZIP_CD		instPost
				, CONCAT(OI.INSTL_ADDR1, ' ', OI.INSTL_ADDR2, ' ', OI.INSTL_ADDR3) instAddr1
				, OI.INSTL_ADDR4		instAddr2
				, UNIERP5.DBO.FN_DEC(OI.INSTL_TEL_NO)		instTel
				, UNIERP5.DBO.FN_DEC(OI.INSTL_HAND_TEL_NO)	instMobile
				, OI.INSTL_CUST_NM		instCustName
				, CASE WHEN OA.CONT_DT IS NOT NULL THEN '2' ELSE '0' END instreserv
				, OP.WD_CD              outcom
				,
 (select TOP 1 COLLECT_AMT FROM RENTAL.DBO.R_CONTRACT_RENTAL_SCHD WITH (NOLOCK) WHERE ORDER_NO = OC.ORDER_NO
 and PAY_FLAG = 'Y' ORDER BY RND_NO DESC) lastOutPayPrice
 			FROM RENTAL.DBO.R_ORDER_CONTRACT				OC  (NOLOCK)
					LEFT JOIN RENTAL.DBO.R_ORDER_INSTALL		OI  (NOLOCK) ON (OI.ORDER_NO = OC.ORDER_NO)
					LEFT JOIN RENTAL.DBO.R_ORDER_CONTRACT_ADD	OA  (NOLOCK) ON (OA.ORDER_NO = OC.ORDER_NO)
					LEFT JOIN UNIERP5.DBO.B_MINOR				M1  (NOLOCK) ON (M1.MAJOR_CD = 'R1001' AND M1.MINOR_CD = OC.SALES_KIND)
					LEFT JOIN RENTAL.DBO.R_ORDER_PAYMENT		OP  (NOLOCK) ON (OP.ORDER_NO = OC.ORDER_NO)
					LEFT JOIN RENTAL.DBO.R_BANK 				BK  (NOLOCK) ON (OP.BANK_CD = BK.BANK_CD)
					LEFT JOIN UNIERP5.DBO.B_CARD_CO 			CC  (NOLOCK) ON (OP.BANK_CD = CC.CARD_CO_CD)
					LEFT JOIN UNIERP5.DBO.B_MINOR				M2  (NOLOCK) ON (M2.MAJOR_CD = 'R3011' AND M2.MINOR_CD = OP.PAY_METH)
					LEFT JOIN UNIERP5.DBO.B_MINOR				M3  (NOLOCK) ON (M3.MAJOR_CD = 'R3100' AND M3.MINOR_CD = OC.CONT_STS)
					LEFT JOIN RENTAL.DBO.R_CUSTOMER				CS  (NOLOCK) ON (CS.CUST_NO = OC.CUST_NO)
					LEFT JOIN UNIERP5.DBO.B_MINOR				M4  (NOLOCK) ON (M4.MAJOR_CD = 'R2001' AND M4.MINOR_CD = CS.CUST_KIND)
					LEFT JOIN RENTAL.DBO.R_ORDER_ITEM           RI  (NOLOCK) ON (OC.ORDER_NO = RI.ORDER_NO)
					LEFT JOIN RENTAL.DBO.R_ORDER_RENTAL_INFO    ORI (NOLOCK) ON (ORI.ORDER_NO = OC.ORDER_NO)
					LEFT JOIN RENTAL.DBO.V_ORDER_KEY 			VOK WITH(NOEXPAND) ON (VOK.ORDER_NO = OC.ORDER_NO)
					LEFT JOIN (SELECT DISTINCT ORDER_NO  FROM RENTAL.DBO.R_WD_CMS_RESULT (NOLOCK) WHERE REFLECT_FLAG IS NULL) AS CMSR  ON VOK.ORDER_NO = CMSR.ORDER_NO
					LEFT JOIN (SELECT DISTINCT ORDER_NO FROM RENTAL.DBO.R_WD_CARD_RESULT (NOLOCK) WHERE REFLECT_FLAG IS NULL) AS CARDR  ON VOK.ORDER_NO = CARDR.ORDER_NO
				WHERE OA.APROV_DT IS NOT NULL	-- 승인일
		        	AND OC.CONT_STS NOT IN ('36', '40', '42', '43', '47', '55', '75', '80')	-- 계약상태 (해지, 환불, ...)
					AND ISNULL(OC.ORDER_STS, '') NOT IN ('37', '45', 'Z5')
					AND OC.SALES_GRP NOT IN ('1050', '2005', '1054', '1051') -- 롯데하이마트, 쿠팡, 전자랜드, 방방 고객 아닌것
					AND CS.CUST_NM LIKE CONCAT('%', #{name}, '%')
					AND (CS.TEL_NO = RENTAL.DBO.FN_ENC(#{phone}) OR CS.HAND_TEL_NO = RENTAL.DBO.FN_ENC(#{phone}))
					AND ((OC.ITEM_GROUP_BIG LIKE 'A%' OR OC.ITEM_GROUP_BIG LIKE 'L%' OR OC.ITEM_GROUP_BIG LIKE 'W%' OR OC.ITEM_GROUP_BIG = 'U10000') OR (OC.ITEM_GROUP_BIG LIKE 'B%' AND OC.GOODS_NM LIKE '%GLED%'))

		) INFO
	</select>

	<update id="updateHitCountForHealthyLife" parameterType="String">
		update
			BBS_NORMAL
		set hit = hit + 1
		where bbs_idx = #{bbsIdx}
	</update>

	<!-- 건강수명 게시판 고객행위분석 -->
	<insert id="insertCustomerAnalysisHist" parameterType="com.bf.web.customer.vo.CustomerAnalysisHistVO">
		insert into
		    customer_analysis_hist (
		        user_idx,
		        user_ip,
		        menu_name,
		        menu_type,
		        bbs_idx,
		        url,
		        referer_url,
		        user_agent,
		        reg_date
		    )
		values
		    (
		    	#{userIdx}
				,#{userIp}
				,#{menuName}
				,#{menuType}
				,#{bbsIdx}
				,#{url}
				,#{refererUrl}
				,#{userAgent}
		        ,SYSDATE()
		    );
	</insert>

	<!-- 알림톡 템플릿 조회 -->
	<select id="selectTemplate" parameterType="String" resultType="HashMap">
		SELECT
			  TEMPLATE_TITLE as templateTitle
			, TEMPLATE_MSG as templateMsg
		FROM
			BIZ_MSG_TEMPLATE
		WHERE
			TEMPLATE_CODE = #{templateCode}
	</select>

	<!-- 분해조립 주문번호 채번 -->
	<select id="getPayOrdNo" resultType="String">
		SELECT CONCAT(DATE_FORMAT(now(), '%Y%m%d'), '-A-', UPPER(SUBSTRING(MD5(RAND()), 3, 5))) payOrdNo;
	</select>

	<!-- 분해조립 주문번호 확인 -->
	<select id="checkPayOrdNo" resultType="int" parameterType="String">
		SELECT COUNT(*) cnt FROM tb_assemble_ord_no WHERE pay_ord_no = #{value}
	</select>

	<!-- 분해조립 주문번호 등록 -->
	<insert id="insertPayOrdNo" parameterType="hashmap">
		INSERT INTO tb_assemble_ord_no (pay_ord_no, order_info)
		VALUES (#{payOrdNo}, #{orderInfo});
	</insert>

	<!-- 분해조립 주문정보 조회 -->
	<select id="getPayOrdInfo" parameterType="String" resultType="String">
		SELECT order_info AS orderInfo FROM tb_assemble_ord_no WHERE pay_ord_no = #{value}
	</select>

	<!-- 분해조립 serviceIdx 조회 -->
	<select id="getServiceIdxFromPayOrdNo" parameterType="String" resultType="String">
		SELECT service_idx AS serviceIdx
		FROM online_service_assemble
		WHERE pay_ord_no=#{value};
	</select>

	<!-- 검색 -->
	<select id="search" resultType="HashMap" parameterType="HashMap">
		/****************[customer.search]****************/

		SELECT * FROM
		   (
		    SELECT subject , contents , writer , hit , DATE_FORMAT(bn.reg_date,'%Y-%m-%d') AS reg_date , bn.bbs_code , bbs_idx  ,bm.bbs_name		,'' AS classification
			FROM bbs_normal bn left join bbs_master bm on bn.bbs_code = bm.bbs_code AND IFNULL(bm.del_state,'0') = 0
	        WHERE 1=1
	        AND (subject LIKE CONCAT('%',#{word},'%')
	        OR contents LIKE CONCAT('%',#{word},'%'))
	        AND IFNULL(bn.del_state,'0') = 0
	        AND bn.bbs_code IN (1, 9)
	        UNION ALL

	        SELECT subject , contents , writer , hit , DATE_FORMAT(bn.reg_date,'%Y-%m-%d') AS reg_date , bn.bbs_code , bbs_idx  ,bm.bbs_name,'' AS classification
			FROM bbs_gallery bn left join bbs_master bm on bn.bbs_code = bm.bbs_code AND IFNULL(bm.del_state,'0') = 0
	        WHERE 1=1
	        AND (subject LIKE CONCAT('%',#{word},'%')
	        OR contents LIKE CONCAT('%',#{word},'%'))
	        AND IFNULL(bn.del_state,'0') = 0
	        AND bn.bbs_code IN (16)
	        UNION ALL

	        SELECT subject , contents , writer , '' , DATE_FORMAT(bn.reg_date,'%Y-%m-%d') AS reg_date , bn.bbs_code , bbs_idx ,bm.bbs_name
	        ,
					CASE
						WHEN bn.classification = '동작안됨' THEN 'trouble'
						WHEN bn.classification = '상품문의' THEN 'inquiry'
						WHEN bn.classification = '렌탈/구매' THEN 'rental'
						WHEN bn.classification = '결제/배송' THEN 'payment'
						WHEN bn.classification = '서비스' THEN 'service'
						WHEN bn.classification = '혜택' THEN 'benefits'
						WHEN bn.classification = '취소/환불/반품' THEN 'return'
						WHEN bn.classification = '회원' THEN 'member'
						WHEN bn.classification = '기타' THEN 'others'
						WHEN bn.classification = '리모컨' THEN 'remote'
						WHEN bn.classification = '소모품' THEN 'supplies'
						ELSE  'others'
					END AS classification
	        FROM bbs_faq bn left join bbs_master bm on bn.bbs_code = bm.bbs_code AND IFNULL(bm.del_state,'0') = 0
	        WHERE 1=1
	        AND (subject LIKE CONCAT('%',#{word},'%')
	        OR contents LIKE CONCAT('%',#{word},'%'))
	        AND IFNULL(bn.del_state,'0') = 0
	        AND site_type NOT LIKE '%NC%'
	        AND bn.bbs_code IN (2)
	        AND bn.classification IN ('상품문의','렌탈/구매','결제/배송','서비스','혜택','취소/환불/반품','회원','기타','동작안됨','리모컨','소모품')
	       ) A
        ORDER BY
        	CASE A.bbs_code
        		WHEN  1 THEN 1
        		WHEN  2 THEN 2
        		WHEN  9 THEN 3
        		WHEN  16 THEN 4
        		ELSE A.bbs_code + 20
        	END,
        	A.reg_date desc

	</select>

		<!-- 검색 -->
	<select id="searchCount" resultType="HashMap" parameterType="HashMap">
		/****************[customer.searchCount]****************/

		SELECT  CNT ,
				CASE WHEN BBS_CODE = '2' THEN 'FAQ'
					 ELSE B.BBS_NAME
                END AS BBS_NAME ,
				IFNULL(BBS_CODE,'9999') AS BBS_CODE
		FROM
			(
				SELECT	  SUM(A.CNT) AS CNT
						, COALESCE(BBS_NAME , 'TOTAL') AS BBS_NAME
				FROM (
							SELECT  count(*) as CNT  ,
									bbs_name
							FROM 	bbs_normal bn
							LEFT JOIN bbs_master bm ON bn.bbs_code = bm.bbs_code
					        WHERE 	1=1
					        AND 	(subject LIKE CONCAT('%',#{word},'%')
					        OR 		contents LIKE CONCAT('%',#{word},'%'))
					        AND 	IFNULL(bn.del_state,'0') = 0
					        AND		bn.bbs_code IN (1, 9)
				            GROUP BY bbs_name

					        UNION ALL

					        SELECT  count(*) as CNT  ,
									bbs_name
							FROM 	bbs_gallery bn
							LEFT JOIN bbs_master bm ON bn.bbs_code = bm.bbs_code
					        WHERE 	1=1
					        AND 	(subject LIKE CONCAT('%',#{word},'%')
					        OR 		contents LIKE CONCAT('%',#{word},'%'))
					        AND 	IFNULL(bn.del_state,'0') = 0
					        AND		bn.bbs_code IN (16)
				            GROUP BY bbs_name

					        UNION ALL
					        SELECT	count(*) as cnt ,bbs_name
					        FROM 	bbs_faq bn
					        LEFT JOIN bbs_master bm ON bn.bbs_code = bm.bbs_code
					        WHERE	 1=1
					        AND 	(subject LIKE CONCAT('%',#{word},'%')
					        OR 		contents LIKE CONCAT('%',#{word},'%'))
					        AND 	IFNULL(bn.del_state,'0') = 0
					        AND site_type NOT LIKE '%NC%'
					        AND bn.classification IN ('상품문의','렌탈/구매','결제/배송','서비스','혜택','취소/환불/반품','회원','기타','동작안됨','리모컨','소모품')
					        AND bn.bbs_code IN (2)
				            GROUP BY bbs_name
					) A
		            GROUP BY bbs_name WITH ROLLUP
            )B LEFT JOIN bbs_master bm ON B.BBS_NAME = bm.BBS_NAME   AND IFNULL(bm.del_state,'0') = 0

	</select>
	<!-- 검색어 수집 -->
	<insert id="searchHistory" parameterType="hashmap">
		INSERT INTO search_history (key_word)
		VALUES (#{word});
	</insert>

	<select id="selectSearchList" resultType="HashMap" parameterType="HashMap">
		/****************[customer.selectSearchList]****************/
		<include refid="common_mapper.pagePrefix" />
		<choose>
			<when test='bbs_code == "2"'>
				SELECT subject , contents , writer , '' as hit, DATE_FORMAT(bn.reg_date,'%Y-%m-%d') AS reg_date , bn.bbs_code , bbs_idx ,bm.bbs_name
				,
					CASE
						WHEN bn.classification = '동작안됨' THEN 'trouble'
						WHEN bn.classification = '상품문의' THEN 'inquiry'
						WHEN bn.classification = '렌탈/구매' THEN 'rental'
						WHEN bn.classification = '결제/배송' THEN 'payment'
						WHEN bn.classification = '서비스' THEN 'service'
						WHEN bn.classification = '혜택' THEN 'benefits'
						WHEN bn.classification = '취소/환불/반품' THEN 'return'
						WHEN bn.classification = '회원' THEN 'member'
						WHEN bn.classification = '기타' THEN 'others'
						WHEN bn.classification = '리모컨' THEN 'remote'
						WHEN bn.classification = '소모품' THEN 'supplies'
						ELSE  'others'
					END AS classification
		        FROM bbs_faq bn left join bbs_master bm ON bn.bbs_code = bm.bbs_code
		        WHERE 1=1
		        AND (subject LIKE CONCAT('%',#{searchStr},'%')
		        OR contents LIKE CONCAT('%',#{searchStr},'%'))
		        AND IFNULL(bn.del_state,'0') = 0
		        AND site_type NOT LIKE '%NC%'
		        AND bn.bbs_code = #{bbs_code}
			</when>
			<when test='bbs_code == "16"'>
				SELECT subject , contents , writer , hit , DATE_FORMAT(bn.reg_date,'%Y-%m-%d') AS reg_date , bn.bbs_code , bbs_idx  ,bm.bbs_name	,'' AS classification
				FROM bbs_gallery bn left join bbs_master bm on bn.bbs_code = bm.bbs_code
		        WHERE 1=1
		        AND (subject LIKE CONCAT('%',#{searchStr},'%')
		        OR contents LIKE CONCAT('%',#{searchStr},'%'))
		        AND IFNULL(bn.del_state,'0') = 0
		        <if test="bbs_code != '' and bbs_code != null">
					 AND bn.bbs_code = #{bbs_code}
				</if>
			</when>
			<otherwise>
				SELECT subject , contents , writer , hit , DATE_FORMAT(bn.reg_date,'%Y-%m-%d') AS reg_date , bn.bbs_code , bbs_idx  ,bm.bbs_name	,'' AS classification
				FROM bbs_normal bn left join bbs_master bm on bn.bbs_code = bm.bbs_code
		        WHERE 1=1
		        AND (subject LIKE CONCAT('%',#{searchStr},'%')
		        OR contents LIKE CONCAT('%',#{searchStr},'%'))
		        AND IFNULL(bn.del_state,'0') = 0
		        <if test="bbs_code != '' and bbs_code != null">
					 AND bn.bbs_code = #{bbs_code}
				</if>
			</otherwise>
		</choose>
		 ORDER BY bn.bbs_code , bn.reg_date desc
		 <include refid="common_mapper.pageSuffix" />
	</select>

	<select id="searchDetail" resultType="HashMap" parameterType="HashMap">
		/****************[customer.searchDetail]****************/
		<choose>
			<when test='bbs_code == "2"'>
				SELECT subject , contents , writer , '' as hit, DATE_FORMAT(bn.reg_date,'%Y-%m-%d') AS reg_date , bn.bbs_code , bbs_idx ,bm.bbs_name
		        FROM bbs_faq bn left join bbs_master bm on bn.bbs_code = bm.bbs_code
		        WHERE 1=1
		        AND bn.bbs_idx = #{bbs_idx}
		        AND IFNULL(bn.del_state,'0') = 0
		        AND bn.bbs_code = #{bbs_code}
			</when>
			<otherwise>
				SELECT subject , contents , writer , hit , DATE_FORMAT(bn.reg_date,'%Y-%m-%d') AS reg_date , bn.bbs_code , bbs_idx  ,bm.bbs_name
				FROM bbs_normal bn left join bbs_master bm on bn.bbs_code = bm.bbs_code
		        WHERE 1=1
		        AND bn.bbs_idx = #{bbs_idx}
		        AND IFNULL(bn.del_state,'0') = 0
		        <if test="bbs_code != '' and bbs_code != null">
					 AND bn.bbs_code = #{bbs_code}
				</if>
			</otherwise>
		</choose>
		 ORDER BY bn.bbs_code , bn.reg_date desc
	</select>

	<select id="selectOdrNumReviewChkList" resultType="HashMap" parameterType="HashMap">
	SELECT COUNT(*) as cnt FROM GOODS_REVIEW WHERE erp_order_no = #{ORDER_NO}  and del_yn = 'N'
	</select>
</mapper>